<?php
namespace Modules\Job\Models;
use App\BaseModel;
use Illuminate\Database\Eloquent\SoftDeletes;
class Categories extends BaseModel
{
    use SoftDeletes;
    protected $table = 'bravo_job_categories';
    protected $fillable = ['name','image_id','hidden'];
    protected $slugField = 'slug';
    protected $slugFromField = 'name';
    public function fill(array $attributes)
    {
        if(!empty($attributes)){
            foreach ( $this->fillable as $item ){
                $attributes[$item] = $attributes[$item] ?? null;
            }
        }
        return parent::fill($attributes); // TODO: Change the autogenerated stub
    }
    public function getImageUrl($size = "medium")
    {
        $url = \Modules\Media\Helpers\FileHelper::url($this->image_id, $size);
        return $url ? $url : '/images/empty.png';
    }
    public function job()
    {
        return $this->hasMany(Job::Class, 'category_id', 'id');
    }
    // public static function getAllAttributesForApi($service_type){
    //     $data = [];
    //     $attributes = Attributes::selectRaw("id,name,slug")->get();
    //     foreach ($attributes as $item){
    //         $translation = $item->translateOrOrigin(app()->getLocale());
    //         $list_terms = $item->terms;
    //         $data[] = [
    //             'id'    => $item->id,
    //             'name'  => $translation->name,
    //             'slug'  => $item->slug,
    //             'terms' => $list_terms->map(function ($term) {
    //                 return $term->dataForApi();
    //             })
    //         ];
    //     }
    //     return $data;
    // }
}